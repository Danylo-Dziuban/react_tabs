{"version":3,"sources":["Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","onSelect","Box","component","sx","display","flexDirection","map","tab","Button","type","onClick","id","title","find","content","App","useState","setSelectedTabId","selectedTab","className","length","ReactDOM","render","document","getElementById"],"mappings":"wMAeaA,EAAwB,SAAC,GAI/B,IAAD,EAHJC,EAGI,EAHJA,KACAC,EAEI,EAFJA,cACAC,EACI,EADJA,SAEA,OACE,eAACC,EAAA,EAAD,CACE,UAAQ,cADV,UAGE,cAACA,EAAA,EAAD,CACEC,UAAU,MACVC,GAAI,CAAEC,QAAS,OAAQC,cAAe,OAFxC,SAIGP,EAAKQ,KAAI,SAACC,GAAD,OACR,cAACN,EAAA,EAAD,UACE,cAACO,EAAA,EAAD,CACEC,KAAK,SACLC,QACE,kBAAOV,EAASO,EAAII,KAHxB,SAMGJ,EAAIK,eAMb,+BACG,UAAAd,EAAKe,MAAK,SAACN,GAAD,OAAaA,EAAII,KAAOZ,YAAlC,eAAkDe,UAAWhB,EAAK,GAAGgB,cCpCjEhB,EAAc,CACzB,CAAEa,GAAI,QAASC,MAAO,QAASE,QAAS,eACxC,CAAEH,GAAI,QAASC,MAAO,QAASE,QAAS,eACxC,CAAEH,GAAI,QAASC,MAAO,QAASE,QAAS,gBA2B3BC,EAlBO,WACpB,MAA0CC,mBAASlB,EAAK,GAAGa,IAA3D,mBAAOZ,EAAP,KAAsBkB,EAAtB,KAEMC,EAAcpB,EAAKe,MAAK,SAAAN,GAAG,OAAIA,EAAII,KAAOZ,MAAkBD,EAAK,GAEvE,OACE,sBAAKqB,UAAU,MAAf,UACE,qDAA0BD,EAAYN,SACtC,8BAAMd,EAAKsB,SACX,cAAC,EAAD,CACEtB,KAAMA,EACNC,cAAeA,EACfC,SAVgB,SAACW,GAAD,OAAiBM,EAAiBN,UClB1DU,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.0e14a6a0.chunk.js","sourcesContent":["/* eslint-disable max-len */\nimport { Button, Box } from '@mui/material';\n\ninterface Ta {\n  id: string,\n  title: string,\n  content: string,\n}\n\ntype Props = {\n  tabs: Ta[],\n  onSelect: (id: string) => void,\n  selectedTabId: string,\n};\n\nexport const Tabs: React.FC<Props> = ({\n  tabs,\n  selectedTabId,\n  onSelect,\n}) => {\n  return (\n    <Box\n      data-cy=\"tab-content\"\n    >\n      <Box\n        component=\"div\"\n        sx={{ display: 'flex', flexDirection: 'row' }}\n      >\n        {tabs.map((tab: Ta) => (\n          <Box>\n            <Button\n              type=\"button\"\n              onClick={\n                () => (onSelect(tab.id))\n              }\n            >\n              {tab.title}\n            </Button>\n          </Box>\n        ))}\n      </Box>\n\n      <div>\n        {tabs.find((tab: Ta) => tab.id === selectedTabId)?.content || tabs[0].content}\n      </div>\n    </Box>\n  );\n};\n","/* eslint-disable max-len */\n/* eslint-disable react/jsx-one-expression-per-line */\nimport React, { useState } from 'react';\n\nimport './App.scss';\nimport { Tabs } from './Tabs';\n\nexport const tabs: Tab[] = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\ninterface Tab {\n  id: string,\n  title: string,\n  content: string,\n}\n\nconst App: React.FC = () => {\n  const [selectedTabId, setSelectedTabId] = useState(tabs[0].id);\n  const onTabSelected = (id: string) => (setSelectedTabId(id));\n  const selectedTab = tabs.find(tab => tab.id === selectedTabId) || tabs[0];\n\n  return (\n    <div className=\"App\">\n      <h1>Selected tab is&nbsp;{selectedTab.title}</h1>\n      <div>{tabs.length}</div>\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTabId}\n        onSelect={onTabSelected}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}